{"version":3,"sources":["BookInput.js","ReadBtn.js","DeleteBtn.js","Book.js","BookContainer.js","BookSearch.js","Library.js","index.js"],"names":["BookInput","props","handleChange","bind","handleSubmit","event","this","onInputChange","onFormSubmit","preventDefault","id","name","type","value","title","onChange","author","pages","cover","checked","read","onClick","React","Component","ReadBtn","renderClass","className","DeleteBtn","Book","background","book","style","backgroundImage","e","readToggle","handleDel","BookContainer","books","map","BookSearch","onSubmit","search","Library","state","readSearch","searchBook","library","JSON","parse","localStorage","getItem","setState","target","newBooks","indexOf","concat","setItem","stringify","alert","parentElement","querySelector","innerHTML","index","splice","persist","query","fetch","then","res","json","result","items","volumeInfo","authors","pageCount","imageLinks","smallThumbnail","console","log","values","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79d775c2.chunk.js","sourcesContent":["import React from 'react';\n\nclass BookInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        this.props.onInputChange(event);\n    }\n\n    handleSubmit(event){\n        this.props.onFormSubmit(event);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <form id=\"inputs\">\n            <h2>Add a book manually:</h2>\n                <label>\n                    Title:\n                    <input \n                    name=\"title\" \n                    type=\"text\" \n                    id=\"title\" \n                    value={this.props.title}\n                    onChange={this.handleChange}\n                    />\n                </label>\n                <label>\n                    Author:\n                    <input name=\"author\" \n                    type=\"text\" \n                    id=\"author\" \n                    value={this.props.author}\n                    onChange={this.handleChange}    \n                    />\n                </label>\n                <label>\n                    Pages:\n                    <input name=\"pages\" \n                    type=\"text\" \n                    id=\"pages\" \n                    value={this.props.pages}\n                    onChange={this.handleChange}\n                    />\n                </label>\n                <label>\n                    Cover URL:\n                    <input name=\"cover\" \n                    type=\"text\" \n                    id=\"cover\" \n                    value={this.props.cover}\n                    onChange={this.handleChange}\n                    />\n                </label>\n                <label>\n                    Read?\n                    <input \n                    name=\"read\" \n                    type=\"checkbox\" \n                    id=\"read\"\n                    checked={this.props.read}\n                    onChange={this.handleChange}\n                    />\n                </label>\n                <button \n                type=\"button\" \n                id = \"btn\"\n                onClick={this.handleSubmit}\n                >\n                    Add Book\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default BookInput","function ReadBtn(props){\n    let renderClass;\n    props.read? renderClass = \"read\" : renderClass= \"notRead\";\n    return(\n        <div\n        className = {renderClass}\n        onClick = {props.onClick}\n        >    \n        </div>\n    );\n}\n\nexport default ReadBtn","function DeleteBtn(props){\n    return(\n        <button\n            className=\"delBtn\"\n            onClick={props.onClick}\n        >\n            DELETE\n        </button>\n    );\n}\n\nexport default DeleteBtn","import ReadBtn from './ReadBtn';\nimport DeleteBtn from './DeleteBtn';\n\nconst Book = (props) =>{\n        let read;\n        let defaultBG = \"https://cdn.hipwallpaper.com/i/7/96/AKf6Qb.jpg\";\n        let background;\n        props.book.cover? background = props.book.cover: background = defaultBG;\n        props.book.read? read = \"READ\": read = 'NOT READ';\n        return(\n            <div className=\"aBookWrapper\" style={{backgroundImage:`url(${background})`}}>\n            <div className=\"aBook\">\n                <p className=\"title\">{props.book.title}</p>\n                <p className=\"author\">{props.book.author}</p>\n                <p className=\"pages\">{props.book.pages + \" Pages\"}</p>\n                {/* <p className=\"readBtn\">{read}</p> */}\n                <ReadBtn\n                    read = {props.book.read}\n                    onClick={(e)=>props.readToggle(e)} \n                />\n                {/* <div className=\"unreadIcon\"></div> */}\n                <DeleteBtn\n                    onClick={(e) => props.handleDel(e)}\n                />\n            </div>\n            </div>\n        );\n}\n\nexport default Book","import Book from './Book';\n\nfunction BookContainer(props){\n    const books = props.books;\n    return(\n        <div className=\"books\">\n            {books.map(book => <Book \n            handleDel={(e) => props.handleDel(e)}\n            readToggle={(e) => props.readToggle(e)} \n            key={book.title} \n            book={book} \n                /> \n            )}\n        </div>\n    );\n}\n\nexport default BookContainer","import React from 'react';\n\nclass BookSearch extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        this.props.onInputChange(event);\n    }\n\n    handleSubmit(event){\n        this.props.onFormSubmit(event);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <form id=\"inputs\" onSubmit={e => { e.preventDefault(); }}>\n            <h2>Search in Google Books:</h2>\n                <label>\n                    Search query:\n                    <input \n                    name=\"search\" \n                    type=\"text\" \n                    id=\"search\" \n                    value={this.props.search}\n                    onChange={this.handleChange}\n                    />\n                </label>\n                <label>\n                    Read?\n                    <input \n                    name=\"readSearch\" \n                    type=\"checkbox\" \n                    id=\"readSearch\"\n                    checked={this.props.read}\n                    onChange={this.handleChange}\n                    />\n                </label>\n                <button \n                type=\"button\" \n                id = \"btn\"\n                onClick={this.handleSubmit}\n                >\n                    Search Book\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default BookSearch","import React from 'react';\nimport BookInput from './BookInput';\nimport BookContainer from './BookContainer';\nimport BookSearch from './BookSearch';\n\nimport './css/reset.css';\nimport './css/style.css';\n\nclass Library extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            title: \"Dune\",\n            author: \"Frank Herbert\",\n            pages: 604,\n            cover: \"https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1555447414l/44767458.jpg\",\n            read: false,\n            search:\"Oathbringer\",\n            books:[\n                {title:\"Foundation\", author:\"Isaac Asimov\", pages:244, read:true, cover: \"https://i.pinimg.com/originals/c6/6e/bc/c66ebc177446badebed65a0d80c45a64.jpg\"},\n                {title:\"The Way of Kings\", author:\"Brandon Sanderson\", pages:1007, read:true, cover: \"https://prodimage.images-bn.com/pimages/9780765376671_p0_v5_s1200x630.jpg\"},\n                {title:\"A Storm of Swords\", author:\"George R. R. Martin\", pages:992, read:true, cover: \"https://images-na.ssl-images-amazon.com/images/I/91-KBK-9K2L.jpg\"}\n            ],\n            readSearch: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDel = this.handleDel.bind(this);\n        this.searchBook = this.searchBook.bind(this);\n        this.readToggle = this.readToggle.bind(this);\n    }\n    \n    componentDidMount(){\n        // localStorage.removeItem('library');\n        let library = JSON.parse(localStorage.getItem('library'));\n        if(library) this.setState({books: library});\n    }\n\n    handleChange(event){\n        const target = event.target;\n        const value = target.name === \"read\" || target.name === \"readSearch\" ? target.checked: target.value;\n        // const value = target.name === \"readSearch\"? target.checked: target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event){\n        const newBooks = this.state.books;\n        const index = newBooks.map((book) => {return book.title}).indexOf(this.state.title);\n        if(index === -1){\n            this.setState({\n                books: newBooks.concat([{\n                    title:this.state.title,\n                    author:this.state.author,\n                    pages:this.state.pages,\n                    cover:this.state.cover,\n                    read:this.state.read\n                }]),\n                title:\"\",\n                author:\"\",\n                pages:\"\",\n                cover:\"\",\n                read:\"\"\n            }, () => {\n                // console.table(this.state.books);\n                localStorage.setItem('library', JSON.stringify(this.state.books));\n            });\n        }else{\n            this.setState({\n                title:\"\",\n                author:\"\",\n                pages:\"\",\n                cover:\"\",\n                read:\"\"\n            });\n            alert(\"That book is already on your library!\");\n        }\n        event.preventDefault();\n    }\n\n    handleDel(event){\n        const target = event.target.parentElement;\n        const title = target.querySelector(\".title\").innerHTML;\n        const newBooks = this.state.books;\n        const index = newBooks.map((book) => {return book.title}).indexOf(title);\n        newBooks.splice(index,1);\n        this.setState({\n            books:newBooks\n        }, ()=>{\n            localStorage.setItem('library', JSON.stringify(this.state.books));\n        });\n    }\n\n    searchBook(event){\n        event.persist()\n        let query = this.state.search;\n        fetch(\"https://www.googleapis.com/books/v1/volumes?q=\"+query)\n        .then((res)=>{\n            return res.json()\n        }).then((result)=>{\n            // console.log(result.items[0].volumeInfo.title);\n            const title = result.items[0].volumeInfo.title;\n            const newBooks = this.state.books;\n            const index = newBooks.map((book) => {return book.title}).indexOf(title);\n            // console.log(this.state.readSearch);\n            if(index === -1){\n                this.setState({\n                    title: result.items[0].volumeInfo.title,\n                    author: result.items[0].volumeInfo.authors[0],\n                    pages: result.items[0].volumeInfo.pageCount,\n                    cover: result.items[0].volumeInfo.imageLinks.smallThumbnail,\n                    read: this.state.readSearch\n                });\n                this.handleSubmit(event);\n            }else{\n                alert(\"That book is already on your library!\");\n            }\n    })\n        this.setState({search:\"\"});\n        event.preventDefault();\n    }\n\n    readToggle(event){\n        console.log(event.target.parentElement);\n        const target = event.target.parentElement;\n        const title = target.querySelector(\".title\").innerHTML;\n        const newBooks = this.state.books;\n        const index = newBooks.map((book) => {return book.title}).indexOf(title);\n        newBooks[index].read = !newBooks[index].read;\n        // console.log(newBooks[index].read);\n        this.setState({\n            books:newBooks\n        }, ()=>{\n            localStorage.setItem('library', JSON.stringify(this.state.books));\n        });\n    }\n\n    render(){\n        const values = {\n            title: this.state.title,\n            author: this.state.author,\n            pages: this.state.pages,\n            cover: this.state.cover,\n            read: this.state.read,\n        }\n        return(\n            <div>\n                <BookContainer\n                    handleDel={this.handleDel} \n                    readToggle={this.readToggle} \n                    books = {this.state.books}\n                />\n                <div id=\"searchBars\">\n                    <BookInput\n                        onInputChange ={this.handleChange}\n                        onFormSubmit={this.handleSubmit}\n                        {...values}\n                    />\n                    <p id=\"or\">OR</p>\n                    <BookSearch\n                        onInputChange ={this.handleChange}\n                        onFormSubmit={this.searchBook}\n                        search = {this.state.search}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Library","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Library from './Library';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Library />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}